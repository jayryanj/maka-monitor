services:
  kafka-1:
    image: "apache/kafka"
    container_name: "kafka-1"
    ports:
      - "9092:9092"
    environment:
      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: CONTROLLER://kafka-1:9091,HOST://kafka-1:9092,DOCKER://kafka-1:9093
      KAFKA_ADVERTISED_LISTENERS: HOST://kafka-1:9092,DOCKER://kafka-1:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT

      # Settings required for KRaft mode
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:9091,2@kafka-2:9091

      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER

      # Auto-creates topics. This is primarily for testing the system. Otherwise, this shouldn't be allowed for a real
      # production cluster.
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
  kafka-2:
    image: "apache/kafka"
    container_name: "kafka-2"
    ports:
      - "9095:9092"
    environment:
      # Configure listeners for both docker and host communication
      KAFKA_LISTENERS: CONTROLLER://kafka-2:9091,HOST://kafka-2:9092,DOCKER://kafka-2:9093
      KAFKA_ADVERTISED_LISTENERS: HOST://kafka-2:9092,DOCKER://kafka-2:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,DOCKER:PLAINTEXT,HOST:PLAINTEXT

      # Settings required for KRaft mode
      KAFKA_NODE_ID: 2
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka-1:9091,2@kafka-2:9091

      # Listener to use for broker-to-broker communication
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER

      # Auto-creates topics. This is primarily for testing the system. Otherwise, this shouldn't be allowed for a real
      # production cluster.
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 2
  kafka-ui:
    image: "ghcr.io/kafbat/kafka-ui:latest"
    container_name: "kafka-ui"
    ports:
      - 8080:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: "true"
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka-1:9093,kafka-2:9093
    depends_on:
      - kafka-1
      - kafka-2
  producer-1:
    build:
      context: ./producer
    container_name: producer-1
    depends_on:
      - kafka-1
      - kafka-2
  producer-2:
    build:
      context: ./producer
    container_name: producer-2
    depends_on:
      - kafka-1
      - kafka-2
  producer-3:
    build:
      context: ./producer
    container_name: producer-3
    depends_on:
      - kafka-1
      - kafka-2
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    depends_on:
      - consumer
  consumer:
    build:
      context: ./consumer
    container_name: consumer
    depends_on:
      - kafka-1
      - kafka-2